name: Regression Tests
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags. If you want to specify multiple tags, you should separate them with a colon :'
        required: true
        type: string
        default: "@regression"
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
        default: "dev"
      id:
        description: 'Unique run identifier (Do not change this)'
        required: false
        default: "Manually Triggered Run"
      pull_request_id:
        description: 'The ID of the pull request. This should be in the format pr-xxxx where xxxx is the pull request id'
        required: false
        default: ""
      github_tag:
        description: 'The github tag to run the test pack from'
        required: false
        default: "main"

jobs:
  regression_tests:
    permissions:
      id-token: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: show_input_parameters
        env:
          tags: ${{ inputs.tags }}
          environment: ${{ inputs.environment }}
          id: ${{ inputs.id }}
          pull_request_id: ${{ inputs.pull_request_id }}
          github_tag: ${{ inputs.github_tag }}
        run: |
          echo "tags: ${tags}"
          echo "environment: ${environment}"
          echo "id: ${id}"
          echo "pull_request_id: ${pull_request_id}"
          echo "github_tag: ${github_tag}"
          # output to summary
          # shellcheck disable=SC2129
          echo "tags: ${tags}"  >> "$GITHUB_STEP_SUMMARY"
          echo "environment: ${environment}"  >> "$GITHUB_STEP_SUMMARY"
          echo "id: ${id}"  >> "$GITHUB_STEP_SUMMARY"
          echo "pull_request_id: ${pull_request_id}"  >> "$GITHUB_STEP_SUMMARY"
          echo "github_tag: ${github_tag}"  >> "$GITHUB_STEP_SUMMARY"

      - name: ${{github.event.inputs.id}}
        env:
          ID: ${{github.event.inputs.id}}
          ENV: ${{ inputs.environment }}
          PULL_REQUEST_ID: ${{ inputs.pull_request_id }}
        run: |
          echo run identifier "$ID"-"$ENV"-"$PULL_REQUEST_ID"
          echo run identifier "$ID"-"$ENV"-"$PULL_REQUEST_ID"  >> "$GITHUB_STEP_SUMMARY"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          ref: ${{ inputs.github_tag }}

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@1902764435ca0dd2f3388eea723a4f92a4eb8302
        with:
          asdf_version: 0.18.0

      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302
        with:
          asdf_version: 0.18.0
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared

      - name: Cache Virtualenv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('pyproject.toml') }}

      - name: Install Dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: make install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/Eligibility-Signposting-API-E2E-Regression-Tests
          aws-region: eu-west-2

      - name: Regression Tests
        id: tests
        continue-on-error: true
        env:
          BASE_URL: ${{ vars.BASE_URL }}
          S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
          S3_PREFIX: ${{ vars.S3_PREFIX }}
          DYNAMODB_TABLE_NAME: ${{ vars.DYNAMODB_TABLE_NAME }}
          ENVIRONMENT: ${{ inputs.environment }}
          PULL_REQUEST_ID: ${{ inputs.pull_request_id }}
          INPUT_TAG: ${{ inputs.tags }}
        run: make run-tests

      - name: force error on failure
        if: steps.tests.outcome != 'success'
        run: |
          echo The regression tests step failed, this likely means there are test failures.
          exit 1
